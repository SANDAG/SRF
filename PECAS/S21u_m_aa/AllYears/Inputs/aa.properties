# This file is used to pass configuration settings to the AA module. It generally should not be modified; the settings
# that are commonly changed are escaped with %NAME% variables, which are set by the run script. Most of these can be
# configured in pecas_settings.py instead.

# Path for output files
aa.previous.data=%SCENDIR%%PREVYEAR%/

aa.reference.data=%SCENDIR%AllYears/Inputs/
aa.base.data=%SCENDIR%AllYears/Inputs/

aa.floorspace.data=%SCENDIR%%YEAR%/
aa.current.data=%SCENDIR%%YEAR%/
output.data=%SCENDIR%%YEAR%/

skim.data=%SCENDIR%%SKIMYEAR%/

skim.filename=%SKIMFILE%.csv

pprocessor.class=com.hbaspecto.pecas.aa.control.AASetupWithTechnologySubstitution

aa.calculateAveragePrices=true
aa.useLogitProduction=true
aa.useLogitTechnologyChoice=true

# Set aa_max_iterations in pecas_settings to control this.
aa.maxIterations=%MAXITS%

# Set aa_maxthreads in machine_settings to control this.
aa.maxThreads=%MAXTHREADS%

aa.useSQLInputs=false

# Experimental setting may speed up AA by controlling overflows
aa.allPriceChangesMustRespectLocalSign=true

# Set aa_initial_step_size in pecas_settings to control this.
aa.initialStepSize=%INITSTEP%
# Set aa_minimum_step_size in pecas_settings to control this.
aa.minimumStepSize=%MINSTEP%
# Set aa_maximum_step_size in pecas_settings to control this.
aa.maximumStepSize=%MAXSTEP%

aa.localPriceStepSizeAdjustment=1.0
Model.skimFormat=TableDataSet
# Set use_floorspace_zones in pecas_settings to control this.
aa.useFloorspaceZones=%FSZONES%
aa.writeUtilityComponents=true
# Set max_total_clearance in pecas_settings to control this.
aa.maxTotalClearance=%MAXTOTAL%
# Set max_specific_clearance in pecas_settings to control this.
aa.maxSpecificClearance=%MAXSPEC%
calculateExchangeSizes=true
aa.ConFac=.01
aa.writeExchangeDerivatives=true
aa.directExcelInputs=false
aa.externalZonesInHistogram=false
# Set use_activities_zonal_values_i in pecas_settings to control this.
aa.useActivitiesZonalValuesI=%AZVI%
# Set update_construction_size_terms in pecas_settings to control this.
aa.updateConstructionSizeTerms=%CONSTSIZE%
aa.xVectorConstants=%XVECTORCONSTANTS%

aa.writeAsciiZonalMakeUse=true
aa.writeBinaryZonalMakeUse=false
aa.stringsInZonalMakeUse=false
# Set use_floorspace_zones in pecas_settings to control this.
aa.splitOutputToFloorspaceZones=%FSZONES%

# Set make_trip_matrices in pecas_settings to control this.
aa.makeTripMatrices=%TRIPMAT%
# Set poisson_trips in pecas_settings to control this.
aa.poissonTrips=%POISSON%
aa.useNormalPoissonApproximationIfHigherThan=10.0
aa.roundExpectedValueForTripsIfHigherThan=100
# Set use_floorspace_zones in pecas_settings to control this.
aa.TAZTripList=%FSZONES%
# Set emme_format_trips in pecas_settings to control this.
aa.writeEmme2FormatTazTrips=%EMMETRIPS%

# normally true so that we get matrices, this isnâ€™t too time consuming
aa.writeFlowMatrices=true
# we write as omx format now, be sure to include the relevant binary library
aa.omxMatrices=true

# normally false as we now have a standalone way of generating compressed flow visuals on demand
# see https://github.com/yueMaHello/Flow_Cluster_Tool
aa.createCompressedFlowVisuals=false
aa.flowClusterCounts=2500,1000
aa.flowClusterThreads=32
aa.flowClusterProjection=epsg:3401

aa.logFrequency=10

# Set constrainedyears in pecas_settings to control this.
constrained=%CONSTRAINED%
constraint.smoothing=1.0
constraint.tolerance=0.02

# Automatically set to false if running constrained with zero iterations.
constraint.secondRun=%SECONDRUN%
# Set stop_on_constraint_mismatch in pecas_settings to control this.
aa.stopOnConstraintMismatch=%STOPMISMATCH%
# Set aa_group_bounds in pecas_settings to control this.
aa.zoneGroupBounds=%GROUPBOUNDS%

aa.automaticTechnologySizeTerms=true
